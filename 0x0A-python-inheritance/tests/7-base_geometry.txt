The 7-base_geometry module
============================

Using BaseGeometry
--------------------
Write a class BaseGeometry (based on 6-base_geometry.py).

First, import the module:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now, give it some valid test cases:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("my_int", 12)
    >>> bg.integer_validator("width", 89)

Testing area instance:
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    >>> bg.area(100)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

Testing integer validator instance:
    >>> bg.integer_validator("width", "hello")
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer
    >>> bg.integer_validator("width", 0)
    Traceback (most recent call last):
    ...
    ValueError: width must be greater than 0
    >>> bg.integer_validator("width", -100)
    Traceback (most recent call last):
    ...
    ValueError: width must be greater than 0

    >>> bg.integer_validator("width")
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator("width", None)
    Traceback (most recent call last):
    ...
    TypeError: width must be an integer

    >>> bg.integer_validator(None, 10)

    >>> bg.integer_validator("width", 10, 10)
    Traceback (most recent call last):
    ...
    TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given
