The ``4-print_square`` module
============================

Using ``4-print_square``
---------------------

Write a function that prints a square with the character #.

    * Prototype: def print_square(size):
    * size is the size length of the square
    * size must be an integer, otherwise raise a TypeError exception with the message size must be an integer
    * if size is less than 0, raise a ValueError exception with the message size must be >= 0
    * if size is a float and is less than 0, raise a TypeError exception with the message size must be an integer
    * You are not allowed to import any module

import ``print_square`` from ``4-print_square``
    >>> print_square = __import__('4-print_square').print_square

Example working as intended:
    >>> print_square(4)
    ####
    ####
    ####
    ####

Passing in negative int:
    >>> print_square(-1)
    Traceback (most recent call last):
    ...
    ValueError: size must be >= 0

Passing in not an int:
    >>> print_square("Hello World")
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer

Passing in nothing:
    >>> print_square()
    Traceback (most recent call last):
    ...
    TypeError: print_square() missing 1 required positional argument: 'size'

Passing in extra args:
    >>> print_square(2, 2)
    Traceback (most recent call last):
    ...
    TypeError: print_square() takes 1 positional argument but 2 were given

Passing in negative float:
    >>> print_square(-1.1)
    Traceback (most recent call last):
    ...
    TypeError: size must be an integer
